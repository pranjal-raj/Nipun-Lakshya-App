// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'secrets.gradle'

buildscript {
    ext {
        agp_version = '8.1.0'
    }
    ext.kotlin_version = '1.8.0'
    ext.apolloVersion = '2.3.1'
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("com.apollographql.apollo:apollo-gradle-plugin:2.5.14")
        classpath "io.realm:realm-gradle-plugin:10.16.1"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.48.1'
        // Added for extensions module
        classpath "org.jlleitschuh.gradle:ktlint-gradle:11.3.1"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.46.0"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.5.3"
        classpath "com.google.android.gms:oss-licenses-plugin:0.10.6"
        classpath("com.android.tools:r8:8.1.56")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url 'https://oss.sonatype.org/content/groups/public' }
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = "mapbox"
                password = getSecrets().getProperty('MAPBOX_DOWNLOADS_TOKEN', '')
            }
        }
        maven {
            url 'https://staging.dev.medicmobile.org/_couch/maven-repo'
            metadataSources { artifact() }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ['-Xjvm-default=all']
            jvmTarget = '1.8'
        }
    }
}

configurations.all {
    transitive = true
    resolutionStrategy {
        force 'org.hamcrest:hamcrest-core:1.3'
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            force 'org.xerial:sqlite-jdbc:3.34.0'
        }
    }
}


task checkAll(type: GradleBuild) {
    tasks = ['checkCode', 'checkTests']
}

task checkCode(type: GradleBuild) {
    tasks = ['pmd', 'checkstyle', 'lintDebug', 'spotbugs']
}

task checkTests(type: GradleBuild) {
    tasks = ['testDebugUnitTest', 'connectedDebugAndroidTest']
}

ext {
    leakyCanaryVersion = '1.5.4'
    daggerVersion = '2.35.1'
    rxLifecycleVersion = '2.2.1'
    workManagerVersion = "1.0.0-alpha10"
    okhttp3Version = '4.9.0'
    lifecycle_version = "2.2.0"
    arch_version = "2.1.0"
    fragmentVersion = '1.3.4'
}


task clean(type: Delete) {
    delete rootProject.buildDir
}